#数据源的地址
spring.datasource.url=jdbc:mysql://localhost:3306/auction_system?serverTimezone=GMT%2b8&useUnicode=true&characterEncoding=utf8
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.continue-on-error=false
spring.datasource.test-while-idle=true
#获取连接时候验证，会影响性能
spring.datasource.test-on-borrow=false
#在连接归还到连接池时是否测试该连接
spring.datasource.test-on-return=false
spring.datasource.validation-query=SELECT 1 FROM DUAL
#空闲连接回收的时间间隔，与test-while-idle一起使用，设置5分钟
spring.datasource.time-between-eviction-runs-millis=300000
#连接池空闲连接的有效时间 ，设置30分钟
spring.datasource.min-evictable-idle-time-millis=1800000
spring.datasource.initial-size=5
#指定连接池中最大的活跃连接数.
spring.datasource.max-active=50
#指定连接池等待连接返回的最大等待时间，毫秒单位.
spring.datasource.max-wait=60000
#指定必须保持连接的最小值
spring.datasource.min-idle=5

spring.jpa.database=MYSQL
#是否打印显示sql语句到控制台
spring.jpa.show-sql=true
# 自动检查实体和数据库表是否一致，如果不一致则会进行更新数据库表
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
#热部署生效
spring.devtools.restart.enabled=true
#图片上传设置
ylrc.upload.photo.sufix=.jpg,.png,.gif,.jpeg
ylrc.upload.photo.maxsize=1024
ylrc.upload.photo.path=E:/ylrc_workspace/AuctionSystemManagement/src/main/resources/upload/
#数据库备份设置
ylrc.database.backup.dir=E:/ylrc_workspace/AuctionSystemManagement/src/main/resources/backup/
ylrc.database.backup.username=root
ylrc.database.backup.password=
ylrc.database.backup.database.name=db_auction_system

#邮件 QQ邮箱的授权码 自己的邮箱
#邮箱地址
ylrc.email.address=
#授权码
ylrc.email.authorization-code=

#支付内容
ylrc.alipay.title = \u733f\u6765\u5165\u6b64\u4f17\u7b79\u5145\u503c\u8ba2\u5355
yrlc.alipay.body = \u733f\u6765\u5165\u6b64\u4f17\u7b79\u5145\u503c\u8ba2\u5355

#Redis链接信息
spring.redis.host=127.0.0.1
spring.redis.port=6379
spring.redis.password=
spring.redis.jedis.pool.max-active=8
spring.redis.jedis.pool.max-wait=-1
spring.redis.jedis.pool.max-idle=500
spring.redis.jedis.pool.min-idle=0
spring.redis.lettuce.shutdown-timeout=1000